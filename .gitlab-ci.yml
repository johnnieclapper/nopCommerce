## nopCommerce Version: 1.0.3
.only-main-and-develop:
  only:
   - main
   - develop

stages:
  - deploy

deploy:
  extends: .only-main-and-develop
  stage: deploy
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    ## - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    ##
    ## Optionally, if you will be using any Git commands, set the user name and
    ## and email.
    ##
    #- git config --global user.email "user@example.com"
    #- git config --global user.name "User name"

  ## script:
  ## - ssh cicd@162.55.61.213 "cd /var/www/johndevrebel.com/public_html && git pull && exit"

  script:
    ## Export reveals all variables in pipeline log.
    ##
    #- export
    ##
    ## In variables REMOTE_SERVER_IP, DOMAIN_NAME we connect via ssh, create the domain directory.
    ## If it is an empty directory the if, then, else statement will clone the repository
    ## or pull the new changes if it is already a git repository. After that it will create all
    ## missing directories from the .gitignore. Tweak the directories if you adjust your
    ## .gitignore file to your project requirements.
    ##
    - ssh -T cicd@"$REMOTE_SERVER_IP" "cd /var/www/cicd && mkdir -p "$DOMAIN_NAME" && cd "$DOMAIN_NAME" && if git rev-parse --git-dir > /dev/null 2>&1; then   git pull ; else   git clone git@gitlab.com:"$CI_PROJECT_NAMESPACE"/"$CI_PROJECT_NAME".git . ; fi && echo -e 'COMPOSE_PROJECT_NAME="$CI_PROJECT_NAME"\nDOMAIN_NAME="$DOMAIN_NAME"' > .env && exit"
